// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentiProject.DB;

namespace StudentiProject.Migrations
{
    [DbContext(typeof(StudentiProjectContext))]
    [Migration("20190724181612_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentiProject.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Velika Gorica",
                            Zip = "10000"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "New York",
                            Zip = "10001"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 4,
                            Name = "London ",
                            Zip = "56273"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Paris",
                            Zip = "75000"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "Amsterdam ",
                            Zip = "1011"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("CityId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Zagrebačka ul. 5",
                            CityId = 1,
                            Name = "University of Applied Sciences Velika Gorica"
                        },
                        new
                        {
                            Id = 2,
                            Address = "1585 Massachusetts Avenue",
                            CityId = 2,
                            Name = "Columbia University"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Vrbik 8",
                            CityId = 1,
                            Name = "Tehničko veleučilište u Zagrebu"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Senate House Malet Street London",
                            CityId = 3,
                            Name = "University of London"
                        },
                        new
                        {
                            Id = 5,
                            Address = "5 Rue Thomas Mann",
                            CityId = 4,
                            Name = "Paris Diderot University"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 3,
                            Name = "France"
                        },
                        new
                        {
                            Id = 4,
                            Name = "England"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Netherlands"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("DivisionId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Full Python Course",
                            DivisionId = 2,
                            Name = "Python Course"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Creating sql database",
                            DivisionId = 2,
                            Name = "SQL Course"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Creating web application",
                            DivisionId = 1,
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Full internet infrastructure",
                            DivisionId = 1,
                            Name = "Internet Infrastructure"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollegeId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeId = 1,
                            Name = "Computer System Maintenance"
                        },
                        new
                        {
                            Id = 2,
                            CollegeId = 2,
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Executor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourceId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("CourceId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Executors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourceId = 1,
                            Description = "Learning syntax",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourceId = 2,
                            Description = "Introductory lecture",
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourceId");

                    b.Property<int?>("CourseId");

                    b.Property<int>("Evaluation");

                    b.Property<string>("ExamTime")
                        .IsRequired();

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourceId = 1,
                            Evaluation = 5,
                            ExamTime = "01:30H",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourceId = 2,
                            Evaluation = 4,
                            ExamTime = "01:15H",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourceId = 3,
                            Evaluation = 4,
                            ExamTime = "01:30H",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourceId = 4,
                            Evaluation = 3,
                            ExamTime = "01:00H",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourceId = 3,
                            Evaluation = 2,
                            ExamTime = "01:45H",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 6,
                            CourceId = 2,
                            Evaluation = 4,
                            ExamTime = "01:30H",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 7,
                            CourceId = 1,
                            Evaluation = 5,
                            ExamTime = "01:15H",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 8,
                            CourceId = 4,
                            Evaluation = 3,
                            ExamTime = "01:30H",
                            StudentId = 4
                        },
                        new
                        {
                            Id = 9,
                            CourceId = 3,
                            Evaluation = 5,
                            ExamTime = "01:00H",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 10,
                            CourceId = 1,
                            Evaluation = 5,
                            ExamTime = "01:45H",
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<int>("DivisionId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            DivisionId = 1,
                            FirstName = "Tomislav ",
                            LastName = "Buhovac"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            DivisionId = 2,
                            FirstName = "Marko ",
                            LastName = "Markic"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            DivisionId = 2,
                            FirstName = "Ivan ",
                            LastName = "Ivic"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            DivisionId = 2,
                            FirstName = "Josip ",
                            LastName = "Nesto"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            DivisionId = 2,
                            FirstName = "Filip ",
                            LastName = "Novi"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("CityId");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Nova Cesta 5",
                            CityId = 1,
                            FirstName = "Davor ",
                            LastName = "Znasve"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Stara Cesta 4",
                            CityId = 2,
                            FirstName = "Tomislav ",
                            LastName = "Nestovisezna"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Novi Put 3",
                            CityId = 3,
                            FirstName = "Josip ",
                            LastName = "Neznabas"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Stari Put 2",
                            CityId = 4,
                            FirstName = "Ivan ",
                            LastName = "Mozeibolje"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Nova Ulica 1",
                            CityId = 5,
                            FirstName = "Marko ",
                            LastName = "Voliucit"
                        });
                });

            modelBuilder.Entity("StudentiProject.Models.City", b =>
                {
                    b.HasOne("StudentiProject.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.College", b =>
                {
                    b.HasOne("StudentiProject.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Course", b =>
                {
                    b.HasOne("StudentiProject.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Division", b =>
                {
                    b.HasOne("StudentiProject.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Executor", b =>
                {
                    b.HasOne("StudentiProject.Models.Course", "Cource")
                        .WithMany()
                        .HasForeignKey("CourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentiProject.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Grade", b =>
                {
                    b.HasOne("StudentiProject.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("StudentiProject.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Student", b =>
                {
                    b.HasOne("StudentiProject.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentiProject.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentiProject.Models.Teacher", b =>
                {
                    b.HasOne("StudentiProject.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
